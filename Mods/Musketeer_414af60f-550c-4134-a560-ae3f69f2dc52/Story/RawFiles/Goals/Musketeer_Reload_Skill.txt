Version 1
SubGoalCombiner SGC_AND
INITSECTION


KBSECTION
// Special case when using Reload, as it restores the charges completely, and not by a fixed amount.
// Turns out, the skillbar doesn't update after updating/clearing tags.
// As it applies Statuses that cause a UI refresh, it's not a problem.
IF
CharacterUsedSkill(_Character, "Shout_Reload", _, _)
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
THEN
//ItemResetChargesToMax((ITEMGUID)_Weapon);
//Musketeer_Update_Ammo_Skills(_Character);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);
//SetTag(_Character, "Musketeer_Reloading_State");
// I don't dislike this effect, so the whole UI refresh is not a big deal.

IF
CharacterUsedSkill(_Character, "Shout_Reload_Incendiary", _, _)
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
THEN
//ItemResetChargesToMax((ITEMGUID)_Weapon);
//Musketeer_Update_Ammo_Skills(_Character);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);
//ApplyStatus(_Character, "RELOAD_INCENDIARY", 4.0, 1, _Character);

IF
CharacterUsedSkill(_Character, "Shout_Reload_Explosive", _, _)
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
THEN
//ItemResetChargesToMax((ITEMGUID)_Weapon);
//Musketeer_Update_Ammo_Skills(_Character);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);
//ApplyStatus(_Character, "RELOAD_INCENDIARY", 4.0, 1, _Character);

IF
CharacterUsedSkill(_Character, "Shout_Reload_Freezing", _, _)
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
THEN
//ItemResetChargesToMax((ITEMGUID)_Weapon);
//Musketeer_Update_Ammo_Skills(_Character);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);
//ApplyStatus(_Character, "RELOAD_INCENDIARY", 4.0, 1, _Character);

IF
CharacterUsedSkill(_Character, "Shout_Reload_Silver", _, _)
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
THEN
//ItemResetChargesToMax((ITEMGUID)_Weapon);
//Musketeer_Update_Ammo_Skills(_Character);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);
//ApplyStatus(_Character, "RELOAD_INCENDIARY", 4.0, 1, _Character);

IF
CharacterUsedSkill(_Character, "Shout_Reload_Holy", _, _)
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
THEN
//ItemResetChargesToMax((ITEMGUID)_Weapon);
//Musketeer_Update_Ammo_Skills(_Character);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);

//ApplyStatus(_Character, "RELOAD_INCENDIARY", 4.0, 1, _Character);


IF
//ObjectWasTagged(_Character, "Musketeer_Reloading_State")
CharacterStatusApplied(_Character, "RELOAD_DEBUFF", _)
AND
CharacterIsInCombat(_Character, 1)
THEN
ApplyStatus(_Character, "MUTED", -1.0, 1, _Character);
ApplyStatus(_Character, "DISARMED", -1.0, 1, _Character);
SetTag(_Character, "Rifle_Reloading");

IF
//ObjectWasTagged(_Character, "Musketeer_Reloading_State")
CharacterStatusApplied(_Character, "RELOAD_DEBUFF", _)
AND
CharacterIsInCombat(_Character, 0)
THEN
RemoveStatus(_Character, "RELOAD_DEBUFF");

IF
//ObjectLostTag(_Character, "Musketeer_Reloading_State")
CharacterStatusRemoved(_Character, "RELOAD_DEBUFF", _)
AND
CharacterGetEquippedItem(_Character, "Weapon" ,_Weapon)
AND
IsTagged(_Character, "Rifle_Armed", 1)
THEN
RemoveStatus(_Character, "MUTED");
RemoveStatus(_Character, "DISARMED");
ClearTag(_Character, "Rifle_Reloading");
ItemResetChargesToMax((ITEMGUID)_Weapon);
Musketeer_Ammo_Requirement_Tags((ITEMGUID)_Weapon, _Character);

IF
//ObjectLostTag(_Character, "Musketeer_Reloading_State")
CharacterStatusRemoved(_Character, "RELOAD_DEBUFF", _)
AND
IsTagged(_Character, "Rifle_Armed", 0)
THEN
RemoveStatus(_Character, "MUTED");
RemoveStatus(_Character, "DISARMED");
ClearTag(_Character, "Rifle_Reloading");

// Casting Reload and instantly ending your turn can cause the Reload Debuff status to be applied after the turn ends, 
// making it persist for a whole additional turn.
// Therefor remove debuffs on start of turn.
IF
ObjectTurnStarted(_Character)
AND
ObjectIsCharacter(_Character, 1)
AND
HasActiveStatus(_Character, "RELOAD_DEBUFF", 1)
THEN
RemoveStatus(_Character, "RELOAD_DEBUFF");
NRD_DebugLog("[OSIRIS] Reload Debuff removed from Character, as his turn started");




// Initialise Reload Debuff Tick DB for players that equip a rifle
IF
DB_Musketeer_RifleEquipped(_Player, 1)
THEN
DB_Musketeer_ReloadDebuffTickLimit(_Player, 0);

PROC
ProcObjectTimerFinished(_Player, "Musketeer_ReloadDebuff_Ticker")
THEN
DB_Musketeer_ReloadDebuffTickLimit((CHARACTERGUID)_Player, 0);
NOT DB_Musketeer_ReloadDebuffTickLimit(_Player, 1);


// Make the Mute and Disarmed Status uncleansable by reapplying them when removed, if the character has the
// Reload debuff.
IF
CharacterStatusRemoved(_Character, "MUTED", _)
AND
DB_Musketeer_ReloadDebuffTickLimit(_Character, 0)
AND
HasAppliedStatus(_Character, "RELOAD_DEBUFF", 1)
THEN
ApplyStatus(_Character, "MUTED", -1.0, 1, _Character);
ProcObjectTimer(_Character, "Musketeer_ReloadDebuff_Ticker", 150);
DB_Musketeer_ReloadDebuffTickLimit(_Character, 1);
NOT DB_Musketeer_ReloadDebuffTickLimit(_Character, 0);

IF
CharacterStatusRemoved(_Character, "DISARMED", _)
AND
DB_Musketeer_ReloadDebuffTickLimit(_Character, 0)
AND
HasAppliedStatus(_Character, "RELOAD_DEBUFF", 1)
THEN
ApplyStatus(_Character, "DISARMED", -1.0, 1, _Character);
ProcObjectTimer(_Character, "Musketeer_ReloadDebuff_Ticker", 150);
DB_Musketeer_ReloadDebuffTickLimit(_Character, 1);
NOT DB_Musketeer_ReloadDebuffTickLimit(_Character, 0);

// Apply Reload Debuffs again after the Tick-Timer expired and a character is reloading.
// Will essentially still cause an infinite loop if other sources continuously remove it, but
// it will not cause a freeze.
IF
TimerFinished("Musketeer_ReloadDebuff_Ticker")
AND
DB_Musketeer_RifleEquipped(_Character, 1)
AND
ObjectIsCharacter(_Character, 1)
AND
HasActiveStatus(_Character, "RELOAD_DEBUFF", 1)
THEN
ApplyStatus(_Character, "MUTED", -1.0, 1, _Character);
ApplyStatus(_Character, "DISARMED", -1.0, 1, _Character);


IF
CharacterStatusApplied(_Character, "RELOAD_INCENDIARY", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 1);

IF
CharacterStatusApplied(_Character, "RELOAD_FREEZING", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 2);

IF
CharacterStatusApplied(_Character, "RELOAD_SILVER", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 3);

IF
CharacterStatusApplied(_Character, "RELOAD_HOLY", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 4);

IF
CharacterStatusApplied(_Character, "RELOAD_EXPLOSIVE", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 6);

IF
CharacterStatusRemoved(_Character, "RELOAD_INCENDIARY", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 0);

IF
CharacterStatusRemoved(_Character, "RELOAD_FREEZING", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 0);

IF
CharacterStatusRemoved(_Character, "RELOAD_SILVER", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 0);

IF
CharacterStatusRemoved(_Character, "RELOAD_HOLY", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 0);

IF
CharacterStatusRemoved(_Character, "RELOAD_EXPLOSIVE", _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 0);

IF
CharacterUsedSkill(_Character, "Shout_Reload", _, _)
THEN
NRD_AmmoBar_Set_Element(_Character, "val", 0);

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Musketeer_Mod"
